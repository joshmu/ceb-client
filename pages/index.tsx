import type { NextPage, NextPageContext } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { Details } from '../src/components/details'
import { LogType } from '../src/types/d'

const dev = process.env.NODE_ENV !== 'production'
let server = dev ? 'http://localhost:3000' : 'https://ceb-client.vercel.app'

export async function getServerSideProps(context: NextPageContext) {
  const { req } = context
  // * using 'x-forwarded-host' since lambda can run on a different port
  if (req && !dev) server = `https://${req.headers['x-forwarded-host']}`

  const props = {} as { logs: LogType[]; error: Error | unknown }

  try {
    // get num of pages required
    const infoRes = await fetch(`${server}/api/info`)
    const { pages, count } = await infoRes.json()
    console.log('total records:', count)

    // fire request per page to reduce lambda download size
    const responses = await Promise.all(
      Array(pages)
        .fill(undefined)
        .map(async (_, page: number) => {
          return fetch(`${server}/api/page`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ page: page + 1, limit: 10000 }),
          }).then(res => res.json())
        })
    )

    // consolidate data
    const data = responses.flat()
    props.logs = data
  } catch (err) {
    console.error(err)
    props.error = err
  }

  return {
    props,
  }
}

const Home: NextPage<{ logs: LogType[]; error?: Error | unknown }> = ({
  logs,
  error,
}) => {
  if (error)
    return (
      <>
        <h1>ERROR!</h1>
        <pre>{JSON.stringify(error, null, 2)}</pre>
      </>
    )

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href='https://nextjs.org'>Next.js!</a>
        </h1>

        <Details logs={logs} />

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href='https://nextjs.org/docs' className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href='https://nextjs.org/learn' className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href='https://github.com/vercel/next.js/tree/canary/examples'
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href='https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href='https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
